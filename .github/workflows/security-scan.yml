name: Security Scanning

on:
  schedule:
    # Run security scans daily at 2 AM UTC
    - cron: '0 2 * * *'
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  security-events: write

jobs:
  code-scanning:
    name: Code Scanning
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: java, javascript
        queries: security-extended,security-and-quality

    - name: Setup Java for CodeQL
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'

    - name: Build backend for CodeQL
      run: |
        cd backend
        chmod +x gradlew
        ./gradlew build -x test

    - name: Setup Node.js for CodeQL
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Build frontend for CodeQL
      run: |
        cd frontend
        npm ci
        npm run build

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3

  dependency-scanning:
    name: Dependency Scanning
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'

    - name: Run Gradle dependency check
      run: |
        cd backend
        chmod +x gradlew
        echo "Dependency check not configured - skipping"
        # TODO: Add OWASP Dependency Check plugin to build.gradle to enable dependency scanning

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Run npm audit
      run: |
        cd frontend
        npm ci
        npm audit --audit-level moderate || true

    - name: Run Snyk security scan
      if: github.event_name != 'pull_request'
      uses: snyk/actions/node@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        args: --severity-threshold=high --file=frontend/package.json
      continue-on-error: true

  secret-scanning:
    name: Secret Scanning
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Run GitLeaks
      uses: gitleaks/gitleaks-action@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Run TruffleHog
      uses: trufflesecurity/trufflehog@main
      with:
        path: ./
        base: main
        head: HEAD
        extra_args: --debug --only-verified

  container-scanning:
    name: Container Security Scanning
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    permissions:
      actions: read
      contents: read
      security-events: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Build backend image for scanning
      run: |
        cd backend
        docker build -t relmgmt-backend:scan .

    - name: Run Trivy vulnerability scanner on backend
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'relmgmt-backend:scan'
        format: 'sarif'
        output: 'backend-trivy-results.sarif'

    - name: Upload backend Trivy scan results
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: 'backend-trivy-results.sarif'
        category: 'backend-container'

    - name: Build frontend image for scanning
      run: |
        cd frontend
        docker build -t relmgmt-frontend:scan .

    - name: Run Trivy vulnerability scanner on frontend
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'relmgmt-frontend:scan'
        format: 'sarif'
        output: 'frontend-trivy-results.sarif'

    - name: Upload frontend Trivy scan results
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: 'frontend-trivy-results.sarif'
        category: 'frontend-container'

    - name: Run Hadolint on Dockerfiles
      uses: hadolint/hadolint-action@v3.1.0
      with:
        dockerfile: backend/Dockerfile
        format: sarif
        output-file: backend-hadolint-results.sarif
        no-fail: true

    - name: Upload Hadolint results
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: backend-hadolint-results.sarif
        category: 'dockerfile-lint'

  compliance-check:
    name: Compliance Checking
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Check for required security files
      run: |
        echo "🔍 Checking for required security files..."
        
        # Check for security documentation
        if [ ! -f "SECURITY.md" ]; then
          echo "⚠️ SECURITY.md file is missing"
        fi
        
        # Check for .gitignore
        if [ ! -f ".gitignore" ]; then
          echo "⚠️ .gitignore file is missing"
        fi
        
        # Check for dependency lock files
        if [ ! -f "backend/gradle/wrapper/gradle-wrapper.properties" ]; then
          echo "⚠️ Gradle wrapper properties missing"
        fi
        
        if [ ! -f "frontend/package-lock.json" ]; then
          echo "⚠️ package-lock.json missing"
        fi
        
        echo "✅ Compliance check completed"

    - name: Generate security report
      run: |
        echo "# Security Scan Summary" > security-report.md
        echo "Generated on: $(date)" >> security-report.md
        echo "" >> security-report.md
        echo "## Scans Performed" >> security-report.md
        echo "- ✅ Code scanning (CodeQL)" >> security-report.md
        echo "- ✅ Dependency scanning" >> security-report.md
        echo "- ✅ Secret scanning" >> security-report.md
        echo "- ✅ Container scanning" >> security-report.md
        echo "- ✅ Compliance checking" >> security-report.md

    - name: Upload security report
      uses: actions/upload-artifact@v4
      with:
        name: security-report
        path: security-report.md
        retention-days: 30
