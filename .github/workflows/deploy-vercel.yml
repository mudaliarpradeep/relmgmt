name: Deploy to Vercel

on:
  push:
    branches: [ main ]
    paths:
      - 'frontend/**'
      - '.github/workflows/deploy-vercel.yml'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'production'
        type: choice
        options:
          - production
          - preview

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment:
      name: ${{ github.event.inputs.environment || 'production' }}
      url: ${{ steps.deploy.outputs.url }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Install Vercel CLI
      run: npm install -g vercel@latest

    - name: Pull Vercel Environment Information
      run: vercel pull --yes --environment=${{ github.event.inputs.environment || 'production' }} --token=${{ secrets.VERCEL_TOKEN }}
      working-directory: ./frontend

    - name: Build Project Artifacts
      run: vercel build ${{ github.event.inputs.environment == 'production' && '--prod' || '' }} --token=${{ secrets.VERCEL_TOKEN }}
      working-directory: ./frontend
      env:
        VITE_API_URL: ${{ secrets.VITE_API_URL }}
        VITE_APP_TITLE: Release Management System
        VITE_LOG_LEVEL: error
        VITE_NOTIF_POLL_MS: '120000'

    - name: Deploy to Vercel
      id: deploy
      run: |
        if [ "${{ github.event.inputs.environment }}" == "production" ] || [ "${{ github.ref }}" == "refs/heads/main" ]; then
          echo "Deploying to production..."
          URL=$(vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }})
        else
          echo "Deploying to preview..."
          URL=$(vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }})
        fi
        echo "url=$URL" >> $GITHUB_OUTPUT
        echo "Deployed to: $URL"
      working-directory: ./frontend

    - name: Comment PR with deployment URL
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: `## üöÄ Vercel Deployment

Deployment URL: ${{ steps.deploy.outputs.url }}

Environment: Preview
Status: ‚úÖ Success`
          })

    - name: Notify deployment success
      if: success()
      run: |
        echo "‚úÖ Deployment successful!"
        echo "URL: ${{ steps.deploy.outputs.url }}"
        echo "Environment: ${{ github.event.inputs.environment || 'production' }}"

    - name: Notify deployment failure
      if: failure()
      run: |
        echo "‚ùå Deployment failed!"
        echo "Check the logs above for details."

